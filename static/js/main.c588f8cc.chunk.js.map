{"version":3,"sources":["svg/difficulty-trivial.svg","TaskIcon.tsx","DailySummary.tsx","HabitSummary.tsx","TodoSummary.tsx","UserSummary.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fillRule","d","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","TaskIcon","priority","context","useContext","AppContext","classNames","getColorClass","task","join","stars","Array","Math","ceil","fill","aria-hidden","showTaskIcons","className","VALUE_THRESHOLDS","COLOR_CLASS","value","DailySummary","useState","showNoHistory","setShowNoHistory","role","onClick","dates","map","day","format","data","daily","Daily","historyMap","Map","text","history","log","debug","delta","taskUpdateTime","moment","date","cronIntervals","search","unix","subtract","taskDate","DATE_KEY_FORMAT","has","set","dailyDeltas","get","filter","undefined","DailyStatus","symbol","push","HabitSummary","habit","Habit","record","JSON","stringify","scoredUp","scoredDown","dailyScores","score","HabitScore","up","down","TodoSummary","startDate","todos","todo","dateCompleted","isAfter","Todo","completionDate","notes","React","createContext","IntervalTree","UserSummary","isLoadingUserData","setLoadingUserData","isLoadingTaskData","setLoadingTaskData","isLoadingTodoData","setLoadingTodoData","numDaysToShow","setNumDaysToShow","setShowTaskIcons","cronTimes","setCronTimes","habits","setHabits","dailys","setDailys","setTodos","userId","userApiKey","fetchWithApiKey","url","fetch","method","headers","handleApiError","res","success","Error","message","setError","useEffect","HABITICA_API_URL","then","json","result","exp","cronTime","error","type","setAppState","AppState","DATA_FETCH_SUCCESS","forEach","range","insert","numDays","appContext","_","reverse","startOf","Provider","AppControls","toggleTaskIcons","App","setUserId","setUserApiKey","PROMPT_FOR_USER_CREDS","appState","ERROR","href","rel","onChange","event","minLength","preventDefault","FETCHING_DATA","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c588f8cc.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M10.667 10.667L16 8l-5.333-2.667L8 0 5.333 5.333 0 8l5.333 2.667L8 16z\"\n});\n\nvar SvgDifficultyTrivial = function SvgDifficultyTrivial(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDifficultyTrivial, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/difficulty-trivial.63c79fb6.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useContext } from \"react\";\n\nimport { ReactComponent as TrivialIcon } from \"./svg/difficulty-trivial.svg\";\n\nimport \"./TaskIcon.css\";\nimport { Task } from \"./HabiticaTypes\";\nimport { AppContext } from \"./UserSummary\";\n\nexport function TaskIcon(props: { task: Task }) {\n  const context = useContext(AppContext);\n  const classNames = [\n    \"task-icon-container\",\n    \"center-wrapper\",\n    getColorClass(props.task),\n  ].join(\" \");\n\n  const stars = Array(getDifficultyLevel(props.task.priority)).fill(\n    <TrivialIcon fill=\"white\" aria-hidden />\n  );\n  return context.showTaskIcons ? (\n    <div className={classNames}>{stars}</div>\n  ) : null;\n\n  /*\n  return context.showTaskIcons ? (\n    <div className={classNames}>{icon}</div>\n  ) : null;\n  */\n}\n\nfunction getDifficultyLevel(priority: number) {\n  return Math.ceil(priority / 0.5);\n}\n\nconst VALUE_THRESHOLDS = [-16, -9, -1, 1, 6, 12];\nconst COLOR_CLASS = [\"worst\", \"worse\", \"bad\", \"neutral\", \"good\", \"better\"];\n\nfunction getColorClass(task: Task): string {\n  for (let i = 0; i < VALUE_THRESHOLDS.length; i++) {\n    if (task.value < VALUE_THRESHOLDS[i]) {\n      return COLOR_CLASS[i];\n    }\n  }\n  return \"best\";\n}\n","import React, { useContext, useState } from \"react\";\nimport moment from \"moment\";\nimport log from \"loglevel\";\nimport { UnfoldIcon, FoldIcon } from \"@primer/octicons-react\";\n\nimport { DATE_KEY_FORMAT } from \"./App\";\nimport { Task } from \"./HabiticaTypes\";\nimport { AppContext } from \"./UserSummary\";\nimport { TaskIcon } from \"./TaskIcon\";\n\nexport interface DailySummaryProps {\n  data: Task[];\n}\n\nexport default function DailySummary(props: DailySummaryProps) {\n  const context = useContext(AppContext);\n  const [showNoHistory, setShowNoHistory] = useState(false);\n\n  return (\n    <section className=\"dailys\">\n      <table>\n        <tr>\n          <th>\n            <div className=\"section-header\">\n              <h2>Dailies</h2>\n              <div\n                role=\"button\"\n                className=\"show-no-history clickable\"\n                title=\"Show/Hide dailies with no data\"\n                onClick={() => setShowNoHistory(!showNoHistory)}\n              >\n                {showNoHistory ? (\n                  <FoldIcon aria-hidden=\"true\" />\n                ) : (\n                  <UnfoldIcon aria-hidden=\"true\" />\n                )}\n              </div>\n            </div>\n          </th>\n          {context.dates.map((day) => (\n            <th>\n              <div className=\"date-heading\">\n                <span>{day.format(\"MM\")}</span>\n                <span>{day.format(\"DD\")}</span>\n              </div>\n            </th>\n          ))}\n        </tr>\n        {props.data.map((daily) => (\n          <Daily showNoHistory={showNoHistory} daily={daily} />\n        ))}\n      </table>\n      <div\n        className=\"link show-no-history\"\n        onClick={() => setShowNoHistory(!showNoHistory)}\n      ></div>\n    </section>\n  );\n}\n\nexport function Daily(props: { daily: Task; showNoHistory: boolean }) {\n  const context = useContext(AppContext);\n  const historyMap = new Map<string, number>();\n\n  const { text, history } = props.daily;\n\n  log.debug(text);\n  for (let i = 0; i < history.length; i++) {\n    let delta;\n    if (i === 0) {\n      delta = history[i].value;\n    } else {\n      delta = history[i].value - history[i - 1].value;\n    }\n    let taskUpdateTime = moment(history[i].date);\n    log.debug(\n      taskUpdateTime.format(\"YYYY-MM-DD HH:mm:ss\") + \": \" + history[i].value\n    );\n    // Only consider times when the task value changes (or the first value).\n    if (delta !== 0) {\n      // This task update was done via cron so the task was actually done the\n      // day before.\n      if (\n        context.cronIntervals.search(\n          taskUpdateTime.unix(),\n          taskUpdateTime.unix()\n        ).length > 0\n      ) {\n        taskUpdateTime = taskUpdateTime.subtract(1, \"day\");\n      }\n      const taskDate = taskUpdateTime.format(DATE_KEY_FORMAT);\n      if (historyMap.has(taskDate)) {\n        log.debug(`Found date conflict for task ${text} on ${taskDate}`);\n      }\n      historyMap.set(taskDate, delta);\n    }\n  }\n\n  const dailyDeltas = context.dates\n    .map((day) => day.format(DATE_KEY_FORMAT))\n    .map((day) => historyMap.get(day));\n\n  if (\n    dailyDeltas.filter((delta) => delta !== undefined).length === 0 &&\n    !props.showNoHistory\n  ) {\n    // Don't render the component if showNoHistory is off.\n    return null;\n  }\n\n  return (\n    <tr>\n      <td className=\"task-name-row\">\n        <TaskIcon task={props.daily} />\n        <span className=\"task-name\">{text}</span>\n      </td>\n      {dailyDeltas.map((delta) => (\n        <DailyStatus delta={delta} />\n      ))}\n    </tr>\n  );\n}\n\nfunction DailyStatus(props: { delta: number | undefined }) {\n  let classNames = [\"daily-cell\"];\n  let symbol;\n  if (!props.delta || props.delta === 0) {\n    classNames.push(\"pass\");\n    symbol = \"\\xa0\";\n  } else if (props.delta > 0) {\n    classNames.push(\"success\");\n    symbol = \"✓\";\n  } else {\n    classNames.push(\"fail\");\n    symbol = \"✖\";\n  }\n  return (\n    <td className={classNames.join(\" \")}>\n      {symbol && (\n        <div className=\"center-wrapper\">\n          <span className=\"symbol\">{symbol}</span>\n        </div>\n      )}\n    </td>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport moment from \"moment\";\nimport log from \"loglevel\";\n\nimport { Task } from \"./HabiticaTypes\";\nimport { DATE_KEY_FORMAT } from \"./App\";\nimport { AppContext } from \"./UserSummary\";\nimport { TaskIcon } from \"./TaskIcon\";\nimport { FoldIcon, UnfoldIcon } from \"@primer/octicons-react\";\n\nexport interface HabitSummaryProps {\n  data: Task[];\n}\n\nexport default function HabitSummary(props: HabitSummaryProps) {\n  const context = useContext(AppContext);\n  const [showNoHistory, setShowNoHistory] = useState(false);\n\n  return (\n    <section className=\"habits\">\n      <table>\n        <tr>\n          <th>\n            <div className=\"section-header\">\n              <h2>Habits</h2>\n              <div\n                role=\"button\"\n                className=\"show-no-history clickable\"\n                title=\"Show/Hide habits with no data\"\n                onClick={() => setShowNoHistory(!showNoHistory)}\n              >\n                {showNoHistory ? (\n                  <FoldIcon aria-hidden=\"true\" />\n                ) : (\n                  <UnfoldIcon aria-hidden=\"true\" />\n                )}\n              </div>\n            </div>\n          </th>\n          {context.dates.map((day) => (\n            <th>\n              <div className=\"date-heading\">\n                <span>{day.format(\"MM\")}</span>\n                <span>{day.format(\"DD\")}</span>\n              </div>\n            </th>\n          ))}\n        </tr>\n        {props.data.map((habit) => (\n          <Habit showNoHistory={showNoHistory} habit={habit} />\n        ))}\n      </table>\n    </section>\n  );\n}\n\nexport function Habit(props: { habit: Task; showNoHistory: boolean }) {\n  const context = useContext(AppContext);\n  const historyMap = new Map<string, [number, number]>();\n  const { text, history } = props.habit;\n\n  log.debug(text);\n  for (let record of history) {\n    let taskDate = moment(record.date).format(DATE_KEY_FORMAT);\n    log.debug(JSON.stringify(record));\n    if (record.scoredUp !== undefined && record.scoredDown !== undefined) {\n      historyMap.set(taskDate, [record.scoredUp, record.scoredDown]);\n    }\n  }\n\n  const dailyScores = context.dates\n    .map((day) => day.format(DATE_KEY_FORMAT))\n    .map((day) => historyMap.get(day));\n\n  if (\n    dailyScores.filter((score) => score !== undefined).length === 0 &&\n    !props.showNoHistory\n  ) {\n    // Don't render the component if showNoHistory is off.\n    return null;\n  }\n\n  return (\n    <tr>\n      <td className=\"task-name-row\">\n        <TaskIcon task={props.habit} />\n        <span className=\"task-name\">{text}</span>\n      </td>\n      {dailyScores.map((score) => {\n        if (score) {\n          return <HabitScore up={score[0]} down={score[1]} />;\n        } else {\n          return <td className=\"habit-cell\">&nbsp;</td>;\n        }\n      })}\n    </tr>\n  );\n}\n\nfunction HabitScore(props: { up: number; down: number }) {\n  return (\n    <td className=\"habit-cell\">\n      <div className=\"habit-score-container\">\n        {props.up > 0 && (\n          <div className=\"success center-wrapper\">\n            <span>+{props.up}</span>\n          </div>\n        )}\n        {props.down > 0 && (\n          <div className=\"fail center-wrapper\">\n            <span>-{props.down}</span>\n          </div>\n        )}\n      </div>\n    </td>\n  );\n}\n","import React, { useContext } from \"react\";\nimport moment from \"moment\";\n\nimport './TodoSummary.css';\nimport { Task } from \"./HabiticaTypes\";\nimport { AppContext } from \"./UserSummary\";\nimport { TaskIcon } from \"./TaskIcon\";\n\nconst TODO_FORMAT = \"MMM D\";\n\nexport default function TodoSummary(props: { data: Task[] }) {\n  const context = useContext(AppContext);\n  const startDate = context.dates[0];\n  const todos = props.data.filter((todo) =>\n    moment(todo!.dateCompleted).isAfter(startDate)\n  );\n\n  return (\n    <section className=\"todos\">\n      <h2>Completed Todos</h2>\n      <ul>\n        {todos.map((todo) => (\n          <Todo todo={todo} />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nfunction Todo(props: { todo: Task }) {\n  const completionDate = moment(props.todo!.dateCompleted).format(TODO_FORMAT);\n  return (\n    <li className=\"todo-row\">\n      <TaskIcon task={props.todo} />\n      <span className=\"todo-date\">{completionDate}</span>\n      <div className=\"todo-content\">\n        <div className=\"todo-text\">{props.todo.text}</div>\n        {props.todo!.notes && (\n          <div className=\"todo-notes\">{props.todo!.notes}</div>\n        )}\n      </div>\n    </li>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport IntervalTree from \"node-interval-tree\";\nimport moment, { Moment } from \"moment\";\n\nimport { AppState } from \"./App\";\nimport { Task, History } from \"./HabiticaTypes\";\nimport DailySummary from \"./DailySummary\";\nimport HabitSummary from \"./HabitSummary\";\nimport TodoSummary from \"./TodoSummary\";\n\nexport const DATE_KEY_FORMAT = \"YYYYMMDD\";\n\nconst HABITICA_API_URL = \"https://habitica.com/api/v3\";\nconst CLIENT_API_KEY =\n  \"0d9428fd-d6fa-45f3-a4db-f130e3ef10ea-HabiticaSummaryTool\";\nconst USER_PATH = \"/user\";\nconst TASKS_PATH = \"/tasks/user\";\nconst TODOS_COMPLETED_PATH = \"/tasks/user?type=completedTodos\";\nconst DEFAULT_NUM_DAYS_TO_SHOW = 7;\n\n/**\n * Tasks completed during Cron time are tasks which were completed the previous\n * day. These are different from tasks which were completed at other times\n * which are assigned to the date on which they were completed. The Cron time\n * is used to guess at which tasks fall into each category. Because the task\n * completion time is not exactly equal to the cron time, this constant is used\n * to create a Cron time buffer to designate all tasks which were completed\n * this amount of time before the Cron time as Cron tasks.\n */\nconst CRON_BUFFER_DURATION_SECONDS = 60;\n\nexport const AppContext = React.createContext({\n  showTaskIcons: true,\n  dates: Array<Moment>(),\n  cronIntervals: new IntervalTree(),\n});\n\ninterface UserSummaryProps {\n  userId: string;\n  userApiKey: string;\n  setError: (errorMessage: Error) => void;\n  setAppState: (state: AppState) => void;\n}\n\nexport default function UserSummary(props: UserSummaryProps) {\n  // App states\n  const [isLoadingUserData, setLoadingUserData] = useState(true);\n  const [isLoadingTaskData, setLoadingTaskData] = useState(true);\n  const [isLoadingTodoData, setLoadingTodoData] = useState(true);\n\n  // User options\n  const [numDaysToShow, setNumDaysToShow] = useState<number>(\n    DEFAULT_NUM_DAYS_TO_SHOW\n  );\n  const [showTaskIcons, setShowTaskIcons] = useState<boolean>(true);\n\n  // User data\n  const [cronTimes, setCronTimes] = useState<Array<[number, number]>>([]);\n  const [habits, setHabits] = useState<Task[]>([]);\n  const [dailys, setDailys] = useState<Task[]>([]);\n  const [todos, setTodos] = useState<Task[]>([]);\n\n  const { userId, userApiKey } = props;\n  const fetchWithApiKey = (url: string) => {\n    return fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-api-user\": userId,\n        \"x-api-key\": userApiKey,\n        \"x-client\": CLIENT_API_KEY,\n      },\n    });\n  };\n\n  const handleApiError = (res: any) => {\n    if (!res.success) {\n      throw new Error(res.message);\n    }\n    return res;\n  };\n\n  const setError = props.setError;\n\n  // Fetch user data to get cron times.\n  useEffect(() => {\n    fetchWithApiKey(HABITICA_API_URL + USER_PATH)\n      .then((res) => res.json())\n      .then(handleApiError)\n      .then(\n        (result) => {\n          setCronTimes(\n            result.data.history.exp.map((history: History) => {\n              const cronTime = moment(history.date);\n              return [\n                cronTime.unix() - CRON_BUFFER_DURATION_SECONDS,\n                cronTime.unix() + CRON_BUFFER_DURATION_SECONDS,\n              ];\n            })\n          );\n          setLoadingUserData(false);\n        },\n        (error) => {\n          setError(error);\n        }\n      );\n  }, []); // DO NOT REMOVE the empty dependency array\n\n  // Fetch habit and daily data.\n  useEffect(() => {\n    fetchWithApiKey(HABITICA_API_URL + TASKS_PATH)\n      .then((res) => res.json())\n      .then(handleApiError)\n      .then(\n        (result) => {\n          setHabits(result.data.filter((task: Task) => task.type === \"habit\"));\n          setDailys(result.data.filter((task: Task) => task.type === \"daily\"));\n          setLoadingTaskData(false);\n        },\n        (error) => {\n          setError(error);\n        }\n      );\n  }, []); // DO NOT REMOVE the empty dependency array\n\n  // Fetch completed todos.\n  useEffect(() => {\n    fetchWithApiKey(HABITICA_API_URL + TODOS_COMPLETED_PATH)\n      .then((res) => res.json())\n      .then(handleApiError)\n      .then(\n        (result) => {\n          setTodos(result.data.filter((task: Task) => task.type === \"todo\"));\n          setLoadingTodoData(false);\n        },\n        (error) => {\n          setError(error);\n        }\n      );\n  }, []); // DO NOT REMOVE the empty dependency array\n\n  if (isLoadingUserData || isLoadingTaskData || isLoadingTodoData) {\n    return (\n      <div className=\"App\">\n        <p>Loading...</p>\n      </div>\n    );\n  } else {\n    props.setAppState(AppState.DATA_FETCH_SUCCESS);\n    const cronIntervals = new IntervalTree();\n    cronTimes.forEach((range) =>\n      cronIntervals.insert(range[0], range[1], true)\n    );\n\n    const appContext = {\n      showTaskIcons: showTaskIcons,\n      dates: getDateArray(numDaysToShow),\n      cronIntervals,\n    };\n\n    return (\n      <div className=\"App\">\n        <AppContext.Provider value={appContext}>\n          <AppControls\n            numDaysToShow={numDaysToShow}\n            setNumDaysToShow={setNumDaysToShow}\n            toggleTaskIcons={() => setShowTaskIcons(!showTaskIcons)}\n          />\n          <HabitSummary data={habits} />\n          <DailySummary data={dailys} />\n          <TodoSummary data={todos} />\n        </AppContext.Provider>\n      </div>\n    );\n  }\n}\n\nfunction AppControls(props: {\n  numDaysToShow: number;\n  setNumDaysToShow: (n: number) => void;\n  toggleTaskIcons: () => void;\n}) {\n  const context = useContext(AppContext);\n  const showMore = () => props.setNumDaysToShow(props.numDaysToShow + 7);\n  const showLess = () => props.setNumDaysToShow(props.numDaysToShow - 7);\n\n  return (\n    <div className=\"show-more-toggle\">\n      <span role=\"button\" className=\"link\" onClick={showMore}>\n        +1 week\n      </span>\n      <span\n        role=\"button\"\n        className=\"link\"\n        onClick={props.toggleTaskIcons}\n        title=\"Show/Hide task icons\"\n      >\n        {context.showTaskIcons ? \"Hide\" : \"Show\"} Task Icons\n      </span>\n      {props.numDaysToShow > 7 ? (\n        <span role=\"button\" className=\"link\" onClick={showLess}>\n          -1 week\n        </span>\n      ) : null}\n    </div>\n  );\n}\n\n/** Get all the dates to show.  */\nfunction getDateArray(numDays: number) {\n  return Array(numDays)\n    .fill(0)\n    .map((_, i) => i + 1)\n    .reverse()\n    .map((i) => moment().subtract(i, \"days\").startOf(\"day\"));\n}\n","import React, { useState, ChangeEvent } from \"react\";\n\nimport \"./App.css\";\nimport UserSummary from \"./UserSummary\";\n\nexport const DATE_KEY_FORMAT = \"YYYYMMDD\";\n\nexport enum AppState {\n  PROMPT_FOR_USER_CREDS,\n  FETCHING_DATA,\n  DATA_FETCH_SUCCESS,\n  ERROR,\n}\n\nfunction App() {\n  const [userId, setUserId] = useState<string>(\"\");\n  const [userApiKey, setUserApiKey] = useState<string>(\"\");\n  const [error, setError] = useState<Error>();\n  const [appState, setAppState] = useState<AppState>(\n    AppState.PROMPT_FOR_USER_CREDS\n  );\n\n  const setAppError = (error: Error) => {\n    setError(error);\n    setAppState(AppState.ERROR);\n  };\n\n  const handleUserIdChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setUserId(event.target.value);\n  };\n\n  const handleUserApiKeyChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setUserApiKey(event.target.value);\n  };\n\n  const handleSubmit = (event: React.MouseEvent) => {\n    event.preventDefault();\n    setAppState(AppState.FETCHING_DATA);\n  };\n\n  if (\n    appState === AppState.PROMPT_FOR_USER_CREDS ||\n    appState === AppState.ERROR\n  ) {\n    return (\n      <div className=\"App\">\n        <h1>Habitica Summary Tool</h1>\n        {error && <div className=\"error\">Error: {error.message}</div>}\n        <p>\n          This tool displays a weekly summary of your Habits, Dailies and\n          Todos in Habitica.\n        </p>\n        <p>\n          Your User ID and API key can be found on the{\" \"}\n          <a\n            href=\"https://habitica.com/user/settings/api\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Settings &gt; API\n          </a>{\" \"}\n          page in Habitica.\n        </p>\n        <form className=\"user-api-form\">\n          <div className=\"label-container\">\n            <div className=\"label\">User ID</div>\n            <input\n              type=\"text\"\n              className=\"user-id\"\n              value={userId}\n              onChange={handleUserIdChange}\n            />\n          </div>\n          <div className=\"label-container\">\n            <span className=\"label\">API Key</span>\n            <input\n              type=\"password\"\n              className=\"api-key\"\n              value={userApiKey}\n              onChange={handleUserApiKeyChange}\n              minLength={36}\n            />\n          </div>\n          <div className=\"submit-wrapper\">\n            <input type=\"submit\" value=\"Fetch My Data\" onClick={handleSubmit} />\n          </div>\n        </form>\n        <h2>Note</h2>\n        <ul>\n          <li>\n            Your user ID and API key will be sent to the Habitica servers and\n            nowhere else.\n          </li>\n          <li>\n            This app does not change your Habitica account data. It only fetches\n            and displays data.\n          </li>\n        </ul>\n      </div>\n    );\n  } else {\n    return (\n      <UserSummary\n        userId={userId}\n        userApiKey={userApiKey}\n        setError={setAppError}\n        setAppState={setAppState}\n      />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"app-wrapper\">\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}